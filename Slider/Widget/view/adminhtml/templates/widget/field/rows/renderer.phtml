<?php



/**
 * @var \Slider\Widget\Block\Adminhtml\Renderer\Renderer $block
 * @var string $htmlId
 * @var string $htmlName
 */

$element = $block->getElement();
$htmlId = $element->getHtmlId();
$htmlName = $element->getName();

?>
<div class="widget-image-field admin__field field">
    <label class="label admin__field-label"><span><?= $element->getLabel(); ?></span></label>
    <div class="admin__field-control control">
        <table class="admin__control-table tiers_table" id="tiers_table">
            <thead>
            <tr>
                <?php foreach ($block->getRows() as $rowData) : ?>
                    <th><?= __($rowData['label']); ?></th>
                <?php endforeach; ?>
                <th><?= __('Action'); ?></th>
            </tr>
            </thead>
            <tbody id="<?= $htmlId; ?>_container"></tbody>
            <tfoot>
            <tr>
                <td colspan="<?= count($block->getRows()); ?>"></td>
                <td class="col-actions-add"><?= $block->getAddButtonHtml(); ?></td>
            </tr>
            </tfoot>
        </table>
        <div class="note admin__field-note"><?= $element->getNote(); ?></div>
    </div>
</div>
<script>
    require([
        'mage/template',
        "jquery",
        "prototype",
        "mage/adminhtml/form",
        "mage/adminhtml/browser"
    ], function (mageTemplate, $j) {
// <![CDATA[
        var <?= $htmlId; ?>RowsTemplate = '<tr>'
            <?php foreach($block->getRows() as $fieldName => $rowData) : ?>
            + '<td>'
            <?php switch($rowData['type']) : case 'text' : ?>
            + '<input type="text" name="<?= $htmlName; ?>[<%- data.index %>][<?= $fieldName; ?>]" value="<%- data.<?= $fieldName; ?> %>" class="widget-option input-text admin__control-text" />'
            <?php break; case 'textarea' : ?>
            + '<textarea name="<?= $htmlName; ?>[<%- data.index %>][<?= $fieldName; ?>]" class="widget-option input-textarea admin__control-text" /><%- data.<?= $fieldName; ?> %></textarea>'
            <?php break; case 'select' : ?>
            + '<select name="<?= $htmlName; ?>[<%- data.index %>][<?= $fieldName; ?>]" id="<?= "select_{$htmlId}_{$fieldName}_<%- data.index %>"; ?>" class="widget-option select admin__control-select">'
            <?php foreach($rowData['options'] as $value => $label) : ?>
            + '<option value="<?= $value; ?>"><?= $label; ?></option>'
            <?php endforeach; ?>
            + '</select>'
            <?php break; case 'image' : ?>
            + '<button type="button" class="action-default scalable" id="<?= "image_button_{$htmlId}_{$fieldName}_<%- data.index %>"; ?>"><span><?= __('Upload');?></span></button>'
            + '<input id="<?= "image_{$htmlId}_{$fieldName}_<%- data.index %>"; ?>" name="<?= $htmlName; ?>[<%- data.index %>][<?= $fieldName; ?>]" type="hidden" value="<%- data.<?= $fieldName; ?> %>" class="image-input" />'
            + '<div class="file-uploader-preview" style="display:none">'
            + '<a target="_blank" href="">'
            + '<img class="preview-image" tabindex="0" src="">'
            + '</a>'
            + '<div class="actions">'
            + '<button type="button" class="action-remove">'
            + '<span><?= __('Delete image'); ?></span>'
            + '</button>'
            + '</div>'
            + '</div>'
            <?php break; endswitch; ?>
            + '</td>'
            <?php endforeach; ?>
            + '<td class="col-delete"><input type="hidden" name="<?= $htmlName; ?>[<%- data.index %>][delete]" class="delete" value="" />'
            + '<button type="button" class="action- scalable delete icon-btn delete-product-option" onclick="return <?= $htmlId; ?>RowsControl.deleteItem(event);">'
            + '<span><?= __("Delete") ?></span></button></td>'
            + '</tr>';
        var selectFields = [],
            imageFields = [];
        <?php foreach($block->getRows() as $fieldName => $rowData) : ?>
        <?php if($rowData['type'] == 'select') : ?>
        selectFields.push('<?= $fieldName; ?>');
        <?php elseif($rowData['type'] == 'image') : ?>
        imageFields.push('<?= $fieldName; ?>');
        <?php endif; ?>
        <?php endforeach; ?>

        var <?= $htmlId; ?>RowsControl = {
            template: mageTemplate(<?= $htmlId; ?>RowsTemplate),
            itemsCount: 0,
            uploadImageUrl: '<?= $block->getUploadButtonOnClickActionUrl(); ?>',
            mediaUrl: '<?= $block->getMediaUrl(); ?>',
            addItem: function () {
                var self = this;
                var data = {
                    index: this.itemsCount++
                };

                if (typeof arguments[0] != 'undefined') {
                    data = Object.assign(data, arguments[0]);
                }

                Element.insert($('<?= $htmlId ?>_container'), {
                    bottom: this.template({
                        data: data
                    })
                });


                this.selectFields.forEach(function (name) {
                    var select = $('select_<?= $htmlId; ?>_' + name + '_' + data.index);
                    if (!select) {
                        return false;
                    }

                    var value = (typeof data[name] != 'undefined') ? data[name] : false;
                    select.childElements().forEach(function (element) {
                        if (value == element.readAttribute('value')) {
                            element.setAttribute('selected', 'selected');
                        }
                    });
                });
                var _uploadImageUrl = this.uploadImageUrl;
                this.imageFields.forEach(function (name) {
                    var button = $('image_button_<?= $htmlId; ?>_' + name + '_' + data.index),
                        input = $j('#image_<?= $htmlId; ?>_' + name + '_' + data.index);
                    var uploadImageUrl = _uploadImageUrl.replace('__target_element_id__', 'image_<?= $htmlId; ?>_' + name + '_' + data.index);
                    if (!button) {
                        return false;
                    }
                    button.on('click', function () {
                        MediabrowserUtility.openDialog(uploadImageUrl)
                    });
                    input.on('change', self._updateImage.bind(self));
                    input.next().find('button.action-remove').first().click(self._deleteImage.bind(self));
                    input.trigger('change');
                });
            },
            deleteItem: function (event) {
                var tr = Event.findElement(event, 'tr');
                if (tr) {
                    Element.select(tr, '.delete').each(function (elem) {
                        elem.value = '1'
                    });
                    Element.select(tr, ['input', 'select']).each(function (elem) {
                        elem.hide()
                    });
                    Element.hide(tr);
                    Element.addClassName(tr, 'no-display template').remove();
                }
                return false;
            },
            _updateImage: function (event) {
                var input = $j(event.target);
                var newImagePath = input.val();
                var newImageUrl = newImagePath;
                if (newImagePath.indexOf(this.mediaUrl) === -1) {
                    var value = newImagePath;
                    var directive_re = /___directive/;
                    if (directive_re.test(value)) {
                        var split_value = value.split("/___directive/");
                        split_value = split_value[1].split("/key/");
                        split_value = split_value[0].split(",");
                        split_value = split_value[0].replace("/", "");

                        var media_url_insert = atob(split_value);
                        var attributes = media_url_insert
                            .replace("{{", "")
                            .replace("}}", "")
                            .split(" ")
                        ;
                        for (var i = 0; i < attributes.length; i++) {
                            var split_attribute = attributes[i]
                                .replace("\"", "")
                                .replace(new RegExp("\\\"" + '$'), '')
                                .split("=")
                            ;
                            if (split_attribute[0] === 'url') {
                                newImagePath = split_attribute[1];
                                break;
                            }
                        }
                    }
                }
                if (newImagePath.indexOf(this.mediaUrl) === -1) {
                    newImageUrl = this.mediaUrl + newImagePath;
                }

                if (newImagePath.length) {
                    var previewDiv = input.next();
                    previewDiv.find('a').first().attr('href', newImageUrl);
                    previewDiv.find('img').first().attr('src', newImageUrl);
                    input.val(newImagePath);
                    previewDiv.show();
                }
            },
            _deleteImage: function (event) {
                var button = $j(event.target);
                var previewDiv = button.parents('.file-uploader-preview');
                previewDiv.find('a').first().attr('href', '');
                previewDiv.find('img').first().attr('src', '');
                previewDiv.prev().val('');
                previewDiv.hide();
            }
        };
        <?= $htmlId; ?>RowsControl.selectFields = selectFields;
        <?= $htmlId; ?>RowsControl.imageFields = imageFields;
        window.<?= $htmlId; ?>RowsControl = <?= $htmlId; ?>RowsControl;

        <?php foreach($block->getValues() as $rowData) : ?>
        <?= $htmlId; ?>RowsControl.addItem(<?= json_encode($rowData); ?>);
        <?php endforeach; ?>
// ]]>
    });
</script>
